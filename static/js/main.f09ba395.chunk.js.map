{"version":3,"sources":["Pages/LoginPage/login-page.module.scss","Pages/ChatRoomPage/chat-room-page.module.scss","components/ChatRoomItem/chat-room-item.module.scss","Pages/CreatePage/create_page.module.scss","components/UserIcon/user-icon.module.scss","components/FormInput/form-input.module.scss","Pages/ProfilePage/profile_page.module.scss","Pages/MainPage/mainPage.module.scss","components/NavigationButton/navigation-button.module.scss","components/AutogrowTextarea/autogrow-textarea.module.scss","App.module.scss","components/Navigation/navigation.module.scss","components/Messages/message.module.scss","components/CustomButton/custom-button.module.scss","Assets/Icons/chat.svg","components/ChatRoomItem/ChatRoomItem.js","components/NavigationButton/NavigationButton.js","Assets/Icons/profile.svg","Assets/Icons/settings.svg","Assets/Icons/chats.svg","components/Navigation/Navigation.js","Redux/chatroom/chatroom-selectors.js","Firebase/firebase.js","Redux/chatroom/chatroom-action-types.js","Redux/chatroom/chatroom-actions.js","Pages/MainPage/MainPage.js","Redux/user/user-selector.js","components/AutogrowTextarea/AutogrowTextarea.js","Assets/Icons/iconfinder_user-alt_285645.svg","components/UserIcon/UserIcon.js","components/Messages/Message.js","Pages/ChatRoomPage/ChatRoomPage.js","components/FormInput/FormInput.js","Redux/user/user-action-types.js","Redux/user/user-actions.js","components/CustomButton/CustomButton.js","Pages/LoginPage/LoginPage.js","Pages/ProfilePage/ProfilePage.js","Pages/CreatePage/CreatePage.js","App.js","reportWebVitals.js","Redux/user/user-reduser.js","Redux/chatroom/chatoom-reduser.js","Redux/store.js","index.js"],"names":["module","exports","ChatRoomItem","chatName","chatDescription","chatImg","patch","to","className","chatItemStyle","chatItem","icon","src","alt","text_vrapper","name","description","NavigationButton","image","navigationButtonStyle","navigationButton","Navigation","navigationStyle","navigation","chats","profile","settings","selectChat","state","chat","selectAsyncMessege","createSelector","asyncMessege","selectChatList","chatList","selectMessege","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ChatroomAcitonTypes","setAsyncMessages","type","payload","mapStateToProps","createStructuredSelector","connect","asyncGetChatList","dispatch","collection","get","then","querySnapshot","list","forEach","doc","push","data","useEffect","renderChatList","map","indx","imageUrl","chatIcon","mainPageStyle","header","placeholder","chatlist","selectCurrentUser","user","currentUser","errorMesege","asyncSendMesege","chatRoomName","textAreaValue","add","uid","displayName","email","photoURL","text","createdAt","FieldValue","serverTimestamp","catch","error","errorCode","errorMessage","useState","setTextAreaValue","useParams","sendMessege","a","value","replace","rows","maxRows","textareaStyles","textarea","onChange","event","target","send_button","onClick","UserIcon","online","userIconStyle","userImg","standartIcon","Message","notYour","children","time","cx","classNames","bind","yourMessageStyle","messageVrapperClass","message_vrapper","not_your_message_vrapper","textVrapperClass","not_your_text_vrapper","textClass","not_your_text","timeClass","not_your_time","nameClass","not_your_name","acyncGetMesege","orderBy","onSnapshot","meseges","metadata","hasPendingWrites","chatRoomDescription","history","useHistory","autoscrollDiv","useRef","autoscroll","options","current","scrollIntoView","behavior","renderMeseges","mesItem","index","toDate","toLocaleTimeString","chatRoomStyle","back_botton","chat_name","chat_description","ref","input_vrapper","FormInput","handleChainge","label","otherProps","formStyles","form_vrapper","lebel","input","UserAcitonTypes","setCurrentUser","setErrorMessages","logOutUser","CustomButton","disabled","clickFunction","customButtonStyle","button","asyncCeateAndSetCurrentUser","password","auth","createUserWithEmailAndPassword","userCredential","asyncLoginAndSetCurrentUser","signInWithEmailAndPassword","loginData","chaingeLoginData","handleSubmitLogin","e","preventDefault","handleChaingeLogin","confirmPassword","signUpData","setSignUpData","handleSubmit","alert","handleChange","loginPageStyle","login_vrapper","onSubmit","login_form","title","required","login_form_crete","asyncLogOutUser","signOut","profilePageStiles","profile_vrapper","user_info_vrapper","user_nickname","asyncCeateNewChatroom","chatRoomData","chaingeChatRoomData","handleSubmitCreateChat","handleChaingeChatRoomData","createPageStyles","create_page_vrapper","description_vrapper","form","asyncIsUserLogined","onAuthStateChanged","appStyle","body","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","errorMasage","userReducer","action","chatReducer","persistConfig","key","storage","whitelist","rootRedusers","combineReducers","redusers","persistReducer","middleware","thunkMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f09ba395.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_vrapper\":\"login-page_login_vrapper__1trkP\",\"login_form\":\"login-page_login_form__1mqBW\",\"login_form_crete\":\"login-page_login_form_crete__3h1QU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"chat-room-page_header__2hFff\",\"back_botton\":\"chat-room-page_back_botton__2jU5m\",\"chat_name\":\"chat-room-page_chat_name__3ries\",\"chat_description\":\"chat-room-page_chat_description__lAYSZ\",\"message_vrapper\":\"chat-room-page_message_vrapper__3rcAq\",\"input_vrapper\":\"chat-room-page_input_vrapper__1Ksw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatItem\":\"chat-room-item_chatItem__3e-vn\",\"icon\":\"chat-room-item_icon__1N4YV\",\"text_vrapper\":\"chat-room-item_text_vrapper__1hFvd\",\"name\":\"chat-room-item_name__3tE6H\",\"description\":\"chat-room-item_description__30HmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create_page_vrapper\":\"create_page_create_page_vrapper__ttxCg\",\"description_vrapper\":\"create_page_description_vrapper__1UeT6\",\"description\":\"create_page_description__A5ji_\",\"input_vrapper\":\"create_page_input_vrapper__3zqWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"user-icon_user__QemHu\",\"userImg\":\"user-icon_userImg__3sdi1\",\"online\":\"user-icon_online__zvbgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_vrapper\":\"form-input_form_vrapper__1fZ1O\",\"input\":\"form-input_input__1_kFz\",\"lebel\":\"form-input_lebel__1Hg_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_vrapper\":\"profile_page_profile_vrapper__1mBR0\",\"user_info_vrapper\":\"profile_page_user_info_vrapper__3JBEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"mainPage_header__3hhQ3\",\"chatlist\":\"mainPage_chatlist__2OVt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationButton\":\"navigation-button_navigationButton__2Rg5l\",\"icon\":\"navigation-button_icon__37yAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"autogrow-textarea_textarea__2thjN\",\"send_button\":\"autogrow-textarea_send_button__2QRBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__wWwgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__1kn-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_vrapper\":\"message_message_vrapper__1e3l2\",\"text_vrapper\":\"message_text_vrapper__3HIzi\",\"text\":\"message_text__1mhiz\",\"time\":\"message_time__36v47\",\"name\":\"message_name__40zYc\",\"not_your_message_vrapper\":\"message_not_your_message_vrapper__23Fik\",\"not_your_text_vrapper\":\"message_not_your_text_vrapper__2c_9K\",\"not_your_text\":\"message_not_your_text__1QbuQ\",\"not_your_time\":\"message_not_your_time__YXTtQ\",\"not_your_name\":\"message_not_your_name__3vYfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"custom-button_button__2nFsm\"};","export default __webpack_public_path__ + \"static/media/chat.fc2014b3.svg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport chatItemStyle from './chat-room-item.module.scss'\r\n\r\nconst ChatRoomItem = ({chatName, chatDescription, chatImg, patch}) => {\r\n    return (\r\n        <NavLink to = {`/chatroom/${patch}`} className = {chatItemStyle.chatItem} >\r\n            <img\r\n                className = {chatItemStyle.icon}\r\n                src = {chatImg}\r\n                alt = 'chat room icon'\r\n            />\r\n            <div className = {chatItemStyle.text_vrapper}>\r\n                <p className = {chatItemStyle.name} > {chatName} </p>\r\n                <p className = {chatItemStyle.description} > {chatDescription} </p>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\nexport default ChatRoomItem","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport navigationButtonStyle from './navigation-button.module.scss'\r\n\r\nconst NavigationButton = ({patch, image, alt}) => {\r\n\r\n    return(\r\n        <NavLink to = {patch} className = {navigationButtonStyle.navigationButton}>\r\n            <img src = {image}\r\n                 alt = {alt}\r\n                 className = {navigationButtonStyle.icon}\r\n            />\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default NavigationButton","export default __webpack_public_path__ + \"static/media/profile.6d853f3a.svg\";","export default __webpack_public_path__ + \"static/media/settings.2f5cad20.svg\";","export default __webpack_public_path__ + \"static/media/chats.63b19f5e.svg\";","import React from 'react'\r\nimport navigationStyle from './navigation.module.scss'\r\nimport NavigationButton from '../NavigationButton/NavigationButton'\r\nimport profile from '../../Assets/Icons/profile.svg'\r\nimport settings from '../../Assets/Icons/settings.svg'\r\nimport chats from '../../Assets/Icons/chats.svg'\r\n\r\nconst Navigation = () => {\r\n\r\n    return(\r\n        <nav className = {navigationStyle.navigation} >\r\n                <NavigationButton\r\n                patch ='/'\r\n                alt = 'Go to chatrooms page'\r\n                image = {chats} \r\n                />\r\n                <NavigationButton\r\n                patch ='/profile'\r\n                alt = 'Go to your profile page'\r\n                image = {profile} \r\n                />\r\n                <NavigationButton\r\n                patch ='/create'\r\n                alt = 'Go to create new chatroom'\r\n                image = {settings} \r\n                />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import { createSelector } from \"reselect\"\r\n\r\nconst selectChat = state => state.chat\r\n\r\nexport const selectAsyncMessege = createSelector(\r\n    [selectChat],\r\n    (chat) => chat.asyncMessege\r\n)\r\n\r\nexport const selectChatList = createSelector(\r\n    [selectChat],\r\n    (chat) => chat.chatList\r\n)\r\n\r\nexport const selectMessege = createSelector(\r\n    [selectChat],\r\n    (chat) => chat.message\r\n)","import firebase from \"firebase/app\"\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyDR-QQpSb3gMwU0bMweizV_8H8h1HGVuqQ\",\r\n    authDomain: \"fir-chat-74bd6.firebaseapp.com\",\r\n    projectId: \"fir-chat-74bd6\",\r\n    storageBucket: \"fir-chat-74bd6.appspot.com\",\r\n    messagingSenderId: \"140017521818\",\r\n    appId: \"1:140017521818:web:a15122b57bdca461ed3b23\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const getCurrentUser = ()=> {\r\n    return new Promise((resolve, reject) => {\r\n      const unsubscribe = firebase.auth.onAuthStateChanged(user => {\r\n        unsubscribe()\r\n        resolve(user)\r\n      }, reject)\r\n    })\r\n  }\r\n\r\nexport const firestore = firebase.firestore()\r\n\r\nexport default firebase","export const ChatroomAcitonTypes = {\r\n    SET_CTATROOM_LIST : 'SET_CTATROOM_LIST',\r\n    SET_ASYNC_MESSAGE: 'SET_ASYNC_MESSAGE',\r\n    SET_MESEGES:'GET_MESEGES'\r\n}","import { firestore } from \"../../Firebase/firebase\"\r\nimport firebase from '../../Firebase/firebase'\r\nimport { ChatroomAcitonTypes } from \"./chatroom-action-types\"\r\n\r\nexport const setChatList = chatList => ({\r\n    type: ChatroomAcitonTypes.SET_CTATROOM_LIST,\r\n    payload: chatList\r\n})\r\n\r\nexport const setAsyncMessages = message => ({\r\n    type: ChatroomAcitonTypes.SET_ASYNC_MESSAGE,\r\n    payload: message\r\n})\r\n\r\nexport const setUserMeseges = message => ({\r\n    type: ChatroomAcitonTypes.SET_MESEGES,\r\n    payload: message\r\n})\r\n\r\n\r\nexport const asyncCeateNewChatroom = ({name, description, imageUrl}) => {\r\n    return (dispatch) => {\r\n        firestore.collection(`ChatList`).add({\r\n\t\t\tname,\r\n\t\t\tdescription,\r\n\t\t\timageUrl,\r\n\t\t})\r\n        .then ( () => {\r\n            dispatch(setAsyncMessages('Sending was suckcesful'))\r\n        })\r\n        .catch( (error) => {\r\n            let {errorCode, errorMessage} = error\r\n                dispatch(setAsyncMessages(errorCode+''+errorMessage))\r\n        })    \r\n    }\r\n}\r\n\r\nexport const asyncGetChatList = () => {\r\n    return (dispatch) => {\r\n        firestore.collection(`ChatList`).get()\r\n            .then( (querySnapshot) =>{\r\n                let list = []\r\n                querySnapshot.forEach((doc) => list.push(doc.data()))\r\n                dispatch(setChatList(list))\r\n            })                \r\n    }\r\n}\r\n\r\nexport const asyncSendMesege = (chatRoomName, currentUser, textAreaValue ) => {\r\n    return (dispatch) => {\r\n        firestore.collection(`${chatRoomName}`).add({\r\n            uid: currentUser.uid,\r\n            displayName: currentUser.displayName,\r\n            email: currentUser.email,\r\n            photoURL: currentUser.photoURL,\r\n            text: textAreaValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        .catch( (error) => {\r\n            let {errorCode, errorMessage} = error\r\n                dispatch(setAsyncMessages(errorCode+''+errorMessage))\r\n        })\r\n    }\r\n}\r\n\r\nexport const acyncGetMesege = (chatRoomName) => {\r\n    return (dispatch) => {\r\n        firestore.collection(`${chatRoomName}`).orderBy('createdAt')\r\n            .onSnapshot( (querySnapshot) => {\r\n                let meseges = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    if (doc.metadata.hasPendingWrites === \"Local\") return\r\n                    return  meseges.push(doc.data())\r\n                })\r\n                dispatch(setUserMeseges(meseges))\r\n            })\r\n        }\r\n}","import React, { useEffect } from 'react'\r\nimport mainPageStyle from './mainPage.module.scss'\r\nimport chatIcon from '../../Assets/Icons/chat.svg'\r\nimport ChatRoomItem from '../../components/ChatRoomItem/ChatRoomItem'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectChatList } from '../../Redux/chatroom/chatroom-selectors'\r\nimport {asyncGetChatList} from '../../Redux/chatroom/chatroom-actions'\r\n\r\n\r\nconst MainPage = ({chatList, asyncGetChatList }) => {\r\n\r\n    useEffect( () => {\r\n        asyncGetChatList()\r\n    },[asyncGetChatList])\r\n\r\n    if (!chatList) return <p>loading</p>\r\n\r\n    const renderChatList = chatList.map( (chat, indx) => {\r\n        return(\r\n            <ChatRoomItem\r\n                    chatName = {chat.name}\r\n                    chatDescription = {chat.description}\r\n                    chatImg = {chat.imageUrl||chatIcon}\r\n                    patch = {chat.name}\r\n                    key = {`${indx}jkdjndki`}\r\n            />    \r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className={mainPageStyle.header} >\r\n                <h1>Chat rooms</h1>\r\n                <input type = 'search' placeholder = 'Search'></input>\r\n            </div>\r\n            <div className = {mainPageStyle.chatlist} >\r\n                 {renderChatList}\r\n            </div>\r\n            <Navigation/>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    chatList: selectChatList\r\n})\r\n\r\nexport default connect(mapStateToProps, {asyncGetChatList})(MainPage)","import { createSelector } from \"reselect\"\r\n\r\nconst selectUser = state => state.user\r\n\r\nexport const selectCurrentUser = createSelector(\r\n    [selectUser],\r\n    (user) => user.currentUser\r\n)\r\n","import React, { useState } from 'react'\r\nimport TextareaAutosize from 'react-autosize-textarea/lib'\r\nimport textareaStyles from './autogrow-textarea.module.scss'\r\nimport { useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectCurrentUser } from '../../Redux/user/user-selector'\r\nimport { asyncSendMesege } from '../../Redux/chatroom/chatroom-actions'\r\nimport {selectAsyncMessege} from '../../Redux/chatroom/chatroom-selectors'\r\n\r\nconst AutogrowTextarea = ({currentUser, asyncSendMesege, errorMesege}) => {\r\n\r\n\tconst [textAreaValue, setTextAreaValue] = useState('')\r\n\tconst {chatRoomName} = useParams()\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetTextAreaValue(event.target.value)\r\n\t}\r\n\r\n\tconst sendMessege = async () => {\r\n\t\tlet value = textAreaValue.replace(/\\s+/g, \" \")\r\n\t\tif(value && (value !== \" \") ){\r\n\t\t\tasyncSendMesege(chatRoomName, currentUser, value)\r\n\t\t}\r\n\t\tsetTextAreaValue('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TextareaAutosize\r\n\t\t\t\tvalue={textAreaValue}\r\n\t\t\t\trows={1}\r\n\t\t\t\tmaxRows={13}\r\n\t\t\t\tclassName={textareaStyles.textarea}\r\n\t\t\t\tplaceholder={errorMesege||'Messege'}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName = {textareaStyles.send_button}\r\n\t\t\t\tonClick = {sendMessege}\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser,\r\n\terrorMesege: selectAsyncMessege,\r\n  })\r\n  \r\nexport default connect(mapStateToProps, {asyncSendMesege})(AutogrowTextarea)","export default __webpack_public_path__ + \"static/media/iconfinder_user-alt_285645.75fdf75c.svg\";","import React from 'react'\r\nimport userIconStyle from './user-icon.module.scss'\r\nimport standartIcon  from '../../Assets/Icons/iconfinder_user-alt_285645.svg'\r\n\r\nconst UserIcon = ({online, image}) => {\r\n    return(\r\n        <div className = {userIconStyle.user} >\r\n            <img\r\n                className = {userIconStyle.userImg}\r\n                alt = 'user avatar'\r\n                src = {image ? image : standartIcon}\r\n            />\r\n            {online && <div className = {userIconStyle.online} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserIcon","import classNames from 'classnames/bind'\r\nimport React from 'react'\r\nimport UserIcon from '../UserIcon/UserIcon'\r\nimport yourMessageStyle from './message.module.scss'\r\n\r\n\r\n\r\nconst Message = ({notYour, children, time, name}) => {\r\n\r\n    let cx = classNames.bind(yourMessageStyle)\r\n\r\n    let messageVrapperClass = cx({\r\n        message_vrapper: true,\r\n        not_your_message_vrapper : notYour,\r\n    })\r\n    let textVrapperClass = cx({\r\n        text_vrapper: true,\r\n        not_your_text_vrapper: notYour\r\n    })\r\n    let textClass = cx({\r\n        text: true,\r\n        not_your_text: notYour\r\n    })\r\n    let timeClass = cx({\r\n        time: true,\r\n        not_your_time: notYour\r\n    })\r\n    let nameClass = cx({\r\n        name: true,\r\n        not_your_name: notYour\r\n    })\r\n\r\n    return(\r\n        <div className = {messageVrapperClass} >\r\n            <UserIcon/>\r\n            <div className = {textVrapperClass} >\r\n                <p className = {textClass}>{children}</p>\r\n            </div>\r\n            <p className = {timeClass}>{time}</p>\r\n            <p className = {nameClass}>{name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, { useEffect, useRef } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport AutogrowTextarea from '../../components/AutogrowTextarea/AutogrowTextarea'\r\nimport Message from '../../components/Messages/Message'\r\nimport chatRoomStyle from './chat-room-page.module.scss'\r\nimport {acyncGetMesege} from '../../Redux/chatroom/chatroom-actions'\r\nimport {selectCurrentUser} from '../../Redux/user/user-selector'\r\nimport {selectMessege} from '../../Redux/chatroom/chatroom-selectors'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst ChatRoomPage = ({currentUser, message, acyncGetMesege, chatRoomDescription}) => {\r\n\r\n    const {chatRoomName} = useParams()\r\n    const history = useHistory()\r\n\r\n    const autoscrollDiv = useRef(null)\r\n    const autoscroll = (options) => {\r\n        autoscrollDiv.current?.scrollIntoView(options)\r\n    }\r\n    \r\n    useEffect( () => {\r\n        acyncGetMesege(chatRoomName)\r\n    },[acyncGetMesege, chatRoomName])\r\n\r\n    useEffect(() => {\r\n        autoscroll({ behavior: \"auto\" })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        autoscroll({ behavior: \"smooth\" })\r\n    }, [message]);\r\n\r\n   \r\n\r\n    if(!message) return (<p>Loading</p>)\r\n\r\n    const renderMeseges = message.map( (mesItem, index) => {\r\n        return(\r\n            <Message\r\n                notYour = {!(mesItem.uid === currentUser.uid )}\r\n                time ={(mesItem.createdAt )? mesItem.createdAt.toDate().toLocaleTimeString('it-IT') : null}\r\n                name = {mesItem.displayName||mesItem.email}\r\n                key = {`${index}kll`}\r\n            >\r\n                {mesItem.text}\r\n            </Message>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={chatRoomStyle.header}>\r\n                <button\r\n                    className = {chatRoomStyle.back_botton}\r\n                    onClick = {() => history.push('/')}\r\n                />\r\n                <p className = {chatRoomStyle.chat_name} >{chatRoomName}</p>\r\n                <p className = {chatRoomStyle.chat_description} >{chatRoomDescription}</p>\r\n            </div>\r\n            <div className = {chatRoomStyle.message_vrapper}>\r\n                {renderMeseges}\r\n                <div ref = {autoscrollDiv}></div>\r\n            </div>\r\n            <div className = {chatRoomStyle.input_vrapper}>\r\n                <AutogrowTextarea/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser,\r\n    message: selectMessege,\r\n  })\r\n  \r\nexport default connect(mapStateToProps, {acyncGetMesege})(ChatRoomPage)","import React from 'react'\r\nimport formStyles from './form-input.module.scss'\r\n\r\nconst FormInput = ({handleChainge, label, ...otherProps}) => {\r\n    return (\r\n        <div className = {formStyles.form_vrapper}>\r\n            {\r\n                label ? \r\n                <label className={formStyles.lebel}>{label}</label>\r\n                : null\r\n            }\r\n            <input\r\n                className = {formStyles.input}\r\n                onChange = {handleChainge}\r\n                {...otherProps}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\nexport default FormInput","export const UserAcitonTypes = {\r\n    SET_CURRENT_USER : 'SET_CURRENT_USER',\r\n    SET_ERROR_MESSAGES: 'SET_ERROR_MESSAGES',\r\n    CHACK_USER_SESSION: 'CHACK_USER_SESSION',\r\n    LOG_OUT_USER: 'LOG_OUT_USER'\r\n}","import {UserAcitonTypes} from './user-action-types'\r\nimport firebase from '../../Firebase/firebase'\r\nimport 'firebase/auth'\r\n\r\nexport const setCurrentUser = user => ({\r\n    type: UserAcitonTypes.SET_CURRENT_USER,\r\n    payload: user\r\n})\r\n\r\nexport const setErrorMessages = error => ({\r\n    type: UserAcitonTypes.SET_ERROR_MESSAGES,\r\n    payload: error\r\n})\r\n\r\nexport const logOutUser = () =>({\r\n    type: UserAcitonTypes.LOG_OUT_USER\r\n})\r\n\r\nexport const asyncCeateAndSetCurrentUser = ({email, password}) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then((userCredential) => { \r\n                let user = userCredential.user\r\n            dispatch(setCurrentUser(user))\r\n            })\r\n            .catch((error) => {\r\n                let {errorCode, errorMessage} = error\r\n                dispatch(setErrorMessages(errorCode+''+errorMessage))\r\n            })\r\n    }\r\n}\r\n\r\nexport const asyncLoginAndSetCurrentUser = (email, password) => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n                let user = userCredential.user;\r\n                dispatch(setCurrentUser(user))\r\n            })\r\n            .catch((error) => {\r\n                let {errorCode, errorMessage} = error\r\n                dispatch(setErrorMessages(errorCode+''+errorMessage))\r\n            })\r\n    }\r\n}\r\n\r\nexport const asyncIsUserLogined = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                dispatch(setCurrentUser(user))\r\n            }\r\n            else{\r\n                dispatch(logOutUser())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const asyncLogOutUser = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                dispatch(logOutUser())\r\n            })\r\n            .catch((error) => {\r\n                let {errorCode, errorMessage} = error\r\n                dispatch(setErrorMessages(errorCode+''+errorMessage))\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport customButtonStyle from './custom-button.module.scss'\r\n\r\nconst CustomButton = ({children, disabled, type, clickFunction}) => {\r\n\r\n    return(\r\n        <>\r\n            <button\r\n                className = {customButtonStyle.button}\r\n                disabled = {disabled}\r\n                type = {type}\r\n                onClick = {clickFunction}\r\n            >\r\n                {children}\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomButton","import React, { useState } from 'react'\r\nimport loginPageStyle from './login-page.module.scss'\r\nimport FormInput from '../../components/FormInput/FormInput'\r\nimport {asyncCeateAndSetCurrentUser, asyncLoginAndSetCurrentUser} from '../../Redux/user/user-actions'\r\nimport { connect } from 'react-redux'\r\nimport CustomButton from '../../components/CustomButton/CustomButton'\r\n\r\n\r\nconst LoginPage = ({asyncCeateAndSetCurrentUser, asyncLoginAndSetCurrentUser}) => {\r\n\r\n    let [loginData, chaingeLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const handleSubmitLogin = async e => {\r\n        debugger\r\n        e.preventDefault()\r\n        const { email, password } = loginData\r\n        asyncLoginAndSetCurrentUser(email, password) \r\n        chaingeLoginData({ email: '', password: '' })\r\n    }\r\n\r\n    const handleChaingeLogin = e => {\r\n        const { value, name } = e.target\r\n        chaingeLoginData({...loginData, [name]: value })\r\n    }\r\n\r\n    let [signUpData, setSignUpData] = useState({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const handleSubmit = async e => {\r\n        debugger\r\n        e.preventDefault()\r\n        const { password, confirmPassword } = signUpData\r\n\r\n        if (password !== confirmPassword) {\r\n            alert('password dont match')\r\n            return\r\n        }\r\n        asyncCeateAndSetCurrentUser(signUpData)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n\r\n        setSignUpData({ ...signUpData, [name]: value })\r\n    }\r\n\r\n    const { email, password, confirmPassword } = signUpData\r\n\r\n    return (\r\n        <div className={loginPageStyle.login_vrapper} >\r\n            <form onSubmit={handleSubmitLogin} className = {loginPageStyle.login_form}>\r\n                <h2 className={loginPageStyle.title}>I already haw an acaunt</h2>\r\n                <span className={loginPageStyle.description} > Sign in with your email and password </span>\r\n                <FormInput\r\n                    name ='email'\r\n                    type ='email'\r\n                    value ={loginData.email}\r\n                    handleChainge = {handleChaingeLogin}\r\n                    placeholder ='email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    name ='password'\r\n                    type ='password'\r\n                    value = {loginData.password}\r\n                    handleChainge = {handleChaingeLogin}\r\n                    placeholder ='password'\r\n                    required\r\n                />\r\n                <CustomButton \r\n                    type = 'submit'\r\n                    disabled = {false}\r\n                > Sign In\r\n                </CustomButton>\r\n            </form>\r\n            <form onSubmit={handleSubmit} className = {`${loginPageStyle.login_form} ${loginPageStyle.login_form_crete } `}>\r\n                <h2 className={loginPageStyle.title}>Or</h2>\r\n                <span className={loginPageStyle.description} > Create new acaunt with email and password </span>\r\n                <FormInput\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    onChange={handleChange}\r\n                    placeholder='Confirm Password'\r\n                    required\r\n                />\r\n                <CustomButton \r\n                    type = 'submit'\r\n                    disabled = {false}\r\n                > Sign In\r\n                </CustomButton>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,{asyncCeateAndSetCurrentUser, asyncLoginAndSetCurrentUser})(LoginPage)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { selectCurrentUser } from '../../Redux/user/user-selector'\r\nimport profilePageStiles from './profile_page.module.scss'\r\nimport {asyncLogOutUser} from '../../Redux/user/user-actions' \r\nimport { createStructuredSelector } from 'reselect'\r\nimport CustomButton from '../../components/CustomButton/CustomButton'\r\nimport UserIcon from '../../components/UserIcon/UserIcon'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\n\r\nconst ProfilePage = ({asyncLogOutUser, currentUser}) => {\r\n\r\n    return(\r\n        <div className = {profilePageStiles.profile_vrapper}>\r\n            <div className = {profilePageStiles.user_info_vrapper}>\r\n                <UserIcon\r\n                    image = {currentUser.photoURL}\r\n                    online = {false}\r\n                />\r\n                <p className = {profilePageStiles.user_nickname}> {currentUser.displayName || 'User name not exist' } </p>\r\n                <CustomButton clickFunction = { () => asyncLogOutUser() } > LogOut </CustomButton>\r\n            </div>\r\n            \r\n            <Navigation/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: selectCurrentUser\r\n  })\r\n  \r\nexport default connect(mapStateToProps, {asyncLogOutUser})(ProfilePage)","import React, { useState } from 'react'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\nimport createPageStyles from './create_page.module.scss'\r\nimport FormInput from '../../components/FormInput/FormInput'\r\nimport CustomButton from '../../components/CustomButton/CustomButton'\r\nimport { connect } from 'react-redux'\r\nimport {asyncCeateNewChatroom} from '../../Redux/chatroom/chatroom-actions'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectAsyncMessege } from '../../Redux/chatroom/chatroom-selectors'\r\n\r\nconst CreatePage = ({asyncCeateNewChatroom, asyncMessege}) => { \r\n\r\n    let [chatRoomData, chaingeChatRoomData] = useState({\r\n        name: '',\r\n        description: '',\r\n        imageUrl: null\r\n    })\r\n\r\n    const handleSubmitCreateChat = async e => {\r\n        e.preventDefault()\r\n        asyncCeateNewChatroom(chatRoomData)\r\n        chaingeChatRoomData({ ...chatRoomData, name: '', description: '', imageUrl: null })\r\n    }\r\n\r\n    const handleChaingeChatRoomData = e => {\r\n        const { value, name } = e.target\r\n        chaingeChatRoomData({...chatRoomData, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <div className = {createPageStyles.create_page_vrapper} >\r\n            <div className = {createPageStyles.description_vrapper} >\r\n                <p className = {createPageStyles.description} > You can create new open chatroom</p>\r\n            </div>\r\n            <div className = {createPageStyles.input_vrapper} >\r\n                <form\r\n                    className = {createPageStyles.form}\r\n                    onSubmit = {handleSubmitCreateChat}\r\n                > \r\n                   <FormInput\r\n                        handleChainge = {handleChaingeChatRoomData}\r\n                        name = 'name'\r\n                        value = {chatRoomData.name}\r\n                        label = 'Chatroom name'\r\n                   />\r\n                   <FormInput\r\n                        handleChainge = {handleChaingeChatRoomData}\r\n                        name = 'description'\r\n                        value = {chatRoomData.description}\r\n                        label = 'Chatroom description'\r\n                   />\r\n                   <CustomButton disabled> Select chat icon </CustomButton>\r\n                   <CustomButton type = 'submit' > Create </CustomButton>\r\n                   {asyncMessege}\r\n                </form>\r\n            </div>\r\n            <Navigation/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    asyncMessege: selectAsyncMessege\r\n})\r\n\r\nexport default connect(mapStateToProps,{asyncCeateNewChatroom})(CreatePage)","import { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport appStyle from './App.module.scss'\nimport MainPage from './Pages/MainPage/MainPage'\nimport ChatRoomPage from './Pages/ChatRoomPage/ChatRoomPage'\nimport LoginPage from './Pages/LoginPage/LoginPage'\nimport { connect } from 'react-redux'\nimport {asyncIsUserLogined} from './Redux/user/user-actions'\nimport { useEffect } from 'react'\nimport { createStructuredSelector } from 'reselect'\nimport { selectCurrentUser } from './Redux/user/user-selector'\nimport ProfilePage from './Pages/ProfilePage/ProfilePage'\nimport CreatePage from './Pages/CreatePage/CreatePage'\n\nconst App = ({asyncIsUserLogined, currentUser}) => {\n\n  useEffect( () =>{\n    asyncIsUserLogined()\n  },[asyncIsUserLogined])\n\n  return (\n    <HashRouter>\n      <div className={appStyle.body}>\n        <Switch>\n          <Route path='/chatroom/:chatRoomName' render = {() => !currentUser ? (<Redirect to='/login' />) : (<ChatRoomPage/>)} />\n          <Route path='/login' render = {() => currentUser ? (<Redirect to='/' />) : (<LoginPage/>)} />\n          <Route path='/profile' render = {() => !currentUser ? (<Redirect to='/login' />) : ( <ProfilePage/> )} />\n          <Route path='/create' render = {() => !currentUser ? (<Redirect to='/login' />) : (<CreatePage/>)} />\n          <Route path='/' render = {() => !currentUser ? (<Redirect to='/login' />) : (<MainPage/>)} />\n          <Route path='/*' render = {() => <h1> 404 page not found </h1>} />\n        </Switch>\n      </div>\n    </HashRouter>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nexport default connect(mapStateToProps, {asyncIsUserLogined})(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {UserAcitonTypes} from './user-action-types'\r\n\r\nconst INITIAL_STATE =  {\r\n    currentUser: null,\r\n    errorMasage: null\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case UserAcitonTypes.SET_CURRENT_USER: \r\n            return {...state, currentUser: action.payload, errorMasage: null}\r\n        case UserAcitonTypes.SET_ERROR_MESSAGES:\r\n            return {...state, errorMasage: action.payload}\r\n        case UserAcitonTypes.LOG_OUT_USER: \r\n            return {...state, currentUser: null}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import {ChatroomAcitonTypes} from './chatroom-action-types'\r\n\r\nconst INITIAL_STATE =  {\r\n    chatList: null,\r\n    message: null,\r\n    asyncMessege: null\r\n    \r\n}\r\n\r\nconst chatReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ChatroomAcitonTypes.SET_CTATROOM_LIST: \r\n            return {...state, chatList: action.payload}\r\n        case ChatroomAcitonTypes.SET_ASYNC_MESSAGE: \r\n            return {...state, asyncMessege: action.payload}\r\n        case ChatroomAcitonTypes.SET_MESEGES: \r\n            return {...state, message: action.payload}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default chatReducer","import {combineReducers, createStore, applyMiddleware,compose} from \"redux\"\r\nimport persistReducer from \"redux-persist/es/persistReducer\"\r\nimport persistStore from \"redux-persist/es/persistStore\"\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport userReducer from \"./user/user-reduser\"\r\nimport chatReducer from \"./chatroom/chatoom-reduser\"\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: [/* 'cart' */]\r\n}\r\n\r\nconst rootRedusers = combineReducers({\r\n    user: userReducer,\r\n    chat: chatReducer,\r\n})\r\n\r\nconst redusers = persistReducer(persistConfig, rootRedusers)\r\n\r\nconst middleware =[thunkMiddleware]\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    redusers,\r\n    composeEnhancers(\r\n    applyMiddleware(...middleware)\r\n    )\r\n)\r\n\r\nexport const persistor = persistStore(store)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store, { persistor } from './Redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store = {store} >\n    <React.StrictMode>\n      <PersistGate persistor = {persistor}>\n        <App />\n      </PersistGate>\n    </React.StrictMode>\n  </Provider>, document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}